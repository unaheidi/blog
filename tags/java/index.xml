<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on gravel&#39;s blog</title>
    <link>https://leongravel.com/tags/java/</link>
    <description>Recent content in java on gravel&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 26 Sep 2018 23:01:41 +0000</lastBuildDate>
    
	<atom:link href="https://leongravel.com/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>java-String知识点汇总</title>
      <link>https://leongravel.com/post/%E5%85%B3%E4%BA%8Ejava-string%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/</link>
      <pubDate>Wed, 26 Sep 2018 23:01:41 +0000</pubDate>
      
      <guid>https://leongravel.com/post/%E5%85%B3%E4%BA%8Ejava-string%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/</guid>
      <description>&lt;p&gt;Java 的 String 类几乎是 Java 中最常使用到的对象类型，关于 String 的一些基础知识对开发者来说显得尤为重要。下面就对 String 相关的一些知识点进行列举和归纳，希望能够加深对 String 对象的认识。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tomcat启动报错</title>
      <link>https://leongravel.com/post/tomcat%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99/</link>
      <pubDate>Fri, 21 Sep 2018 23:01:41 +0000</pubDate>
      
      <guid>https://leongravel.com/post/tomcat%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99/</guid>
      <description>&lt;p&gt;tomcat 启动报错&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>引入spring-cloud-starter-openfeign后有些类找不到</title>
      <link>https://leongravel.com/post/springcloud-%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 03 Sep 2018 23:01:41 +0000</pubDate>
      
      <guid>https://leongravel.com/post/springcloud-%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;p&gt;今天用ali maven重新导入的spring-cloud-starter-openfeign&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Base64转CommonsMultipartFile</title>
      <link>https://leongravel.com/post/base64/</link>
      <pubDate>Mon, 27 Aug 2018 23:01:41 +0000</pubDate>
      
      <guid>https://leongravel.com/post/base64/</guid>
      <description>&lt;p&gt;在做一个上传组件的时候，需要把前端传过来的 &lt;code&gt;Base64&lt;/code&gt; 的字符串转为 &lt;code&gt;CommonsMultipartFile&lt;/code&gt;，然后解析保存。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>schedule</title>
      <link>https://leongravel.com/post/schedule/</link>
      <pubDate>Wed, 01 Aug 2018 23:01:41 +0000</pubDate>
      
      <guid>https://leongravel.com/post/schedule/</guid>
      <description>最近使用 spring boot、 quartz、H2(内存数据库) 以及 RabbitMQ 等实现了一个动态的任务管理系统，可以动态的进行任务的创建、修改、暂停、运行以及删除</description>
    </item>
    
    <item>
      <title>spring-conditional</title>
      <link>https://leongravel.com/post/spring-conditional/</link>
      <pubDate>Sat, 21 Jul 2018 23:01:41 +0000</pubDate>
      
      <guid>https://leongravel.com/post/spring-conditional/</guid>
      <description>@Conditional 注解是 Spring 4 提供的基于条件的 Bean 的创建方式，Spring Boot 大量利用了这个特定来实现自动配置。比如，当某一个 jar 包在一个类路径下时，自动配置一个或</description>
    </item>
    
    <item>
      <title>java基础以及进阶知识点总结</title>
      <link>https://leongravel.com/post/java%E5%9F%BA%E7%A1%80%E4%BB%A5%E5%8F%8A%E8%BF%9B%E9%98%B6%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 15 Jul 2018 23:01:41 +0000</pubDate>
      
      <guid>https://leongravel.com/post/java%E5%9F%BA%E7%A1%80%E4%BB%A5%E5%8F%8A%E8%BF%9B%E9%98%B6%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;h3 id=&#34;抽象类和接口的比较&#34;&gt;抽象类和接口的比较&lt;/h3&gt;

&lt;p&gt;相同点：&lt;br /&gt;
都不能被实例化&lt;br /&gt;
都包含抽象方法，这些抽象方法用于描述系统能提供哪些服务，而这些服务是由子类来提供实现的&lt;br /&gt;
在系统设计上，两者都代表系统的抽象层，当一个系统使用一棵继承树上的类时，应该尽量把引用变量声明为继承树的上层抽象类型，这样可以提高两个系统之间的松耦合&lt;br /&gt;
不同点：&lt;br /&gt;
在抽象类中可以为部分方法提供默认的实现，从而避免在子类中重复实现它们；但是抽象类不支持多继承。接口不能提供任何方法的实现，但是支持多继承。&lt;br /&gt;
接口代表了接口定义者和接口实现者的一种契约；而抽象类和具体类一般而言是一种继承的关系，即两者在概念本质上是不同。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>springboot</title>
      <link>https://leongravel.com/post/springboot/</link>
      <pubDate>Wed, 11 Jul 2018 23:01:41 +0000</pubDate>
      
      <guid>https://leongravel.com/post/springboot/</guid>
      <description>&lt;h2 id=&#34;spring-boot-简介&#34;&gt;Spring Boot 简介&lt;/h2&gt;

&lt;p&gt;Spring Boot(英文中是&lt;code&gt;引导&lt;/code&gt;的意思)，是用来简化Spring应用的搭建到开发的过程。应用开箱即用，只要通过 &lt;code&gt;just run&lt;/code&gt;（可能是 java -jar 或 tomcat 或 maven插件run 或 shell脚本），就可以启动项目。二者，Spring Boot 只要很少的Spring配置文件（例如那些xml，property）。 因为&lt;code&gt;习惯优先于配置&lt;/code&gt;的原则，使得Spring Boot在快速开发应用和微服务架构实践中得到广泛应用。   Javaer装好JDK环境和Maven工具就可以开始学习Boot了~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【转载】java.lang.String</title>
      <link>https://leongravel.com/post/java.lang.string/</link>
      <pubDate>Mon, 12 Mar 2018 20:54:41 +0000</pubDate>
      
      <guid>https://leongravel.com/post/java.lang.string/</guid>
      <description>整理一下关于String类的方法。 概览 继承结构 Serializable CharSequence Comparable 字符集简介 重要域成员 重要方法 代码点及代码单元 比较 搜索 提取子串 创建全大写/全小写副本 一些体</description>
    </item>
    
  </channel>
</rss>